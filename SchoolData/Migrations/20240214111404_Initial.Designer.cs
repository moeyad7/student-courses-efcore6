// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolData;

#nullable disable

namespace SchoolData.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20240214111404_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SchoolDomain.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "Introduction to Mathematics",
                            Title = "Mathematics"
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "Introduction to Science",
                            Title = "Science"
                        },
                        new
                        {
                            CourseId = 3,
                            Description = "Introduction to History",
                            Title = "History"
                        });
                });

            modelBuilder.Entity("SchoolDomain.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2024, 2, 14, 11, 14, 3, 790, DateTimeKind.Utc).AddTicks(3160),
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 2,
                            EnrollmentDate = new DateTime(2024, 2, 14, 11, 14, 3, 790, DateTimeKind.Utc).AddTicks(3160),
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2024, 2, 14, 11, 14, 3, 790, DateTimeKind.Utc).AddTicks(3160),
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 3,
                            EnrollmentDate = new DateTime(2024, 2, 14, 11, 14, 3, 790, DateTimeKind.Utc).AddTicks(3160),
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 5,
                            CourseId = 2,
                            EnrollmentDate = new DateTime(2024, 2, 14, 11, 14, 3, 790, DateTimeKind.Utc).AddTicks(3160),
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("SchoolDomain.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<double>("GPA")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Age = 18,
                            GPA = 3.7999999999999998,
                            Name = "John Doe"
                        },
                        new
                        {
                            StudentId = 2,
                            Age = 19,
                            GPA = 3.8999999999999999,
                            Name = "Jane Smith"
                        },
                        new
                        {
                            StudentId = 3,
                            Age = 20,
                            GPA = 3.5,
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            StudentId = 4,
                            Age = 21,
                            GPA = 3.7000000000000002,
                            Name = "Bob Brown"
                        });
                });

            modelBuilder.Entity("SchoolDomain.Enrollment", b =>
                {
                    b.HasOne("SchoolDomain.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolDomain.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolDomain.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("SchoolDomain.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
